[{"C:\\Users\\Leonardo\\Desktop\\spacex\\back\\fron\\src\\index.js":"1","C:\\Users\\Leonardo\\Desktop\\spacex\\back\\fron\\src\\reportWebVitals.js":"2","C:\\Users\\Leonardo\\Desktop\\spacex\\back\\fron\\src\\App.js":"3","C:\\Users\\Leonardo\\Desktop\\spacex\\back\\fron\\src\\components\\newCardForm.js":"4","C:\\Users\\Leonardo\\Desktop\\spacex\\back\\fron\\src\\components\\toasty.js":"5","C:\\Users\\Leonardo\\Desktop\\SpaceXTicketWeb\\front\\src\\index.js":"6","C:\\Users\\Leonardo\\Desktop\\SpaceXTicketWeb\\front\\src\\App.js":"7","C:\\Users\\Leonardo\\Desktop\\SpaceXTicketWeb\\front\\src\\reportWebVitals.js":"8","C:\\Users\\Leonardo\\Desktop\\SpaceXTicketWeb\\front\\src\\components\\newCardForm.js":"9","C:\\Users\\Leonardo\\Desktop\\SpaceXTicketWeb\\front\\src\\components\\toasty.js":"10"},{"size":547,"mtime":1606997193377,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1606995870251,"results":"13","hashOfConfig":"12"},{"size":862,"mtime":1607010062083,"results":"14","hashOfConfig":"12"},{"size":3295,"mtime":1607010443202,"results":"15","hashOfConfig":"12"},{"size":1152,"mtime":1607010590171,"results":"16","hashOfConfig":"12"},{"size":547,"mtime":1607014751978,"results":"17","hashOfConfig":"18"},{"size":862,"mtime":1607014751934,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":1607014751985,"results":"20","hashOfConfig":"18"},{"size":3295,"mtime":1607014751961,"results":"21","hashOfConfig":"18"},{"size":1152,"mtime":1607014751965,"results":"22","hashOfConfig":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"16izw16",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"18h4yvu",{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"36"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},"C:\\Users\\Leonardo\\Desktop\\spacex\\back\\fron\\src\\index.js",[],["48","49"],"C:\\Users\\Leonardo\\Desktop\\spacex\\back\\fron\\src\\reportWebVitals.js",[],"C:\\Users\\Leonardo\\Desktop\\spacex\\back\\fron\\src\\App.js",["50"],"C:\\Users\\Leonardo\\Desktop\\spacex\\back\\fron\\src\\components\\newCardForm.js",["51"],"C:\\Users\\Leonardo\\Desktop\\spacex\\back\\fron\\src\\components\\toasty.js",["52"],"C:\\Users\\Leonardo\\Desktop\\SpaceXTicketWeb\\front\\src\\index.js",[],["53","54"],"C:\\Users\\Leonardo\\Desktop\\SpaceXTicketWeb\\front\\src\\App.js",["55"],"import logo from \"./assets/spaceportada.jpg\";\nimport \"./App.css\";\nimport NewCardForm from \"./components/newCardForm\";\n\nimport { Container, Col, Row } from \"reactstrap\";\nimport { ToastContainer, toast } from \"react-toastify\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ToastContainer\n        position=\"bottom-right\"\n        autoClose={5000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n      />\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <Container>\n          <Row>\n            <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\n              <NewCardForm />\n            </Col>\n          </Row>\n        </Container>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\Leonardo\\Desktop\\SpaceXTicketWeb\\front\\src\\reportWebVitals.js",[],"C:\\Users\\Leonardo\\Desktop\\SpaceXTicketWeb\\front\\src\\components\\newCardForm.js",["56"],"import React, { useState } from \"react\";\r\nimport { Button, Form, FormGroup, Label, Input, FormText } from \"reactstrap\";\r\nimport Toasty from \"./toasty\";\r\nconst axios = require('axios');\r\n\r\n\r\nconst NewCardForm = (props) => {\r\n  var [typeInput, setTypeInput] = useState(\"issue\");\r\n  var [title, setTitle] = useState(\"\");\r\n  var [description, setDescription] = useState(\"\");\r\n  var [category, setCategory] = useState(\"Maintenance\");\r\n\r\n  const cleanInputs = () => {\r\n    setTitle(\"\");\r\n    setDescription (\"\");\r\n    setCategory(\"Maintenance\");\r\n  };\r\n\r\n  const selectTypeFunction = (selection) => {\r\n    if (selection !== typeInput) {\r\n      setTypeInput(selection);\r\n      console.log(selection);\r\n      cleanInputs();\r\n    }\r\n  };\r\n\r\n  const createCard = (props) => {\r\n    console.log(\"entra\")\r\n    var json = {};\r\n    switch (typeInput) {\r\n      case \"issue\":\r\n        json = {\r\n          type: typeInput,\r\n          title: title,\r\n          description: description,\r\n        };\r\n        break;\r\n      case \"bug\":\r\n        json = {\r\n          type: typeInput,\r\n          description: description,\r\n        };\r\n        break;\r\n      case \"task\":\r\n        json = {\r\n          type: typeInput,\r\n          title: title,\r\n          category: category,\r\n        };\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    console.log(json)\r\n    axios.post(\"http://localhost:5000\", json).then(function (response) {\r\n    Toasty.notify(response)\r\n    }).catch(error => {\r\n      Toasty.notifyError(error)\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Form>\r\n      <Label for=\"title\">Type</Label>\r\n      <Input\r\n        type=\"select\"\r\n        name=\"select\"\r\n        id=\"exampleSelect\"\r\n        onChange={(e) => selectTypeFunction(e.target.value)}\r\n      >\r\n        <option>issue</option>\r\n        <option>bug</option>\r\n        <option>task</option>\r\n      </Input>\r\n      {typeInput !== \"bug\" && (\r\n        <FormGroup>\r\n          <Label for=\"title\">Title</Label>\r\n          <Input\r\n            type=\"textarea\"\r\n            name=\"title\"\r\n            id=\"titleInput\"\r\n            value={title}\r\n            onChange={(e) => {\r\n              setTitle(e.target.value);\r\n            }}\r\n          />\r\n        </FormGroup>\r\n      )}\r\n      {typeInput !== \"task\" && (\r\n        <FormGroup>\r\n          <Label for=\"description\">Description</Label>\r\n          <Input\r\n            type=\"textarea\"\r\n            name=\"description\"\r\n            id=\"description\"\r\n            value={description}\r\n            onChange={(e) => {\r\n              setDescription(e.target.value);\r\n            }}\r\n          />\r\n        </FormGroup>\r\n      )}\r\n      <FormGroup></FormGroup>\r\n      {typeInput === \"task\" && (\r\n        <FormGroup>\r\n          <Label for=\"categoryInput\">Category</Label>\r\n          <Input\r\n            type=\"select\"\r\n            name=\"categoryInput\"\r\n            id=\"categoryInput\"\r\n            onChange={(e) => {\r\n              setCategory(e.target.value);\r\n            }}\r\n          >\r\n            <option>Maintenance</option>\r\n            <option>Test</option>\r\n            <option>Research</option>\r\n          </Input>\r\n        </FormGroup>\r\n      )}\r\n\r\n      <Button style={{ marginLeft: \"auto\", display: \"flex\" }} onClick={()=>createCard(props)}>Create</Button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default NewCardForm;\r\n","C:\\Users\\Leonardo\\Desktop\\SpaceXTicketWeb\\front\\src\\components\\toasty.js",["57"],"import React from \"react\";\r\n\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst Toasty = {\r\n  notify: (response) => {\r\n    console.log(response);\r\n    if (response.status === 201) {\r\n      toast.success(\"created card name:\" + response.data.name, {\r\n        position: \"bottom-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      })}\r\n       else {\r\n      toast.warn(\"Ooops, Something Broke\", {\r\n        position: \"bottom-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n    }\r\n  },\r\n\r\n  notifyError: (response) => {\r\n\r\n\r\n   \r\n      toast.error(\"Ooops\" + response , {\r\n        position: \"bottom-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n    }\r\n  \r\n};\r\nexport default Toasty;\r\n",{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":6,"column":26,"nodeType":"64","messageId":"65","endLine":6,"endColumn":31},{"ruleId":"62","severity":1,"message":"66","line":2,"column":49,"nodeType":"64","messageId":"65","endLine":2,"endColumn":57},{"ruleId":"62","severity":1,"message":"67","line":1,"column":8,"nodeType":"64","messageId":"65","endLine":1,"endColumn":13},{"ruleId":"58","replacedBy":"68"},{"ruleId":"60","replacedBy":"69"},{"ruleId":"62","severity":1,"message":"63","line":6,"column":26,"nodeType":"64","messageId":"65","endLine":6,"endColumn":31},{"ruleId":"62","severity":1,"message":"66","line":2,"column":49,"nodeType":"64","messageId":"65","endLine":2,"endColumn":57},{"ruleId":"62","severity":1,"message":"67","line":1,"column":8,"nodeType":"64","messageId":"65","endLine":1,"endColumn":13},"no-native-reassign",["70"],"no-negated-in-lhs",["71"],"no-unused-vars","'toast' is defined but never used.","Identifier","unusedVar","'FormText' is defined but never used.","'React' is defined but never used.",["70"],["71"],"no-global-assign","no-unsafe-negation"]